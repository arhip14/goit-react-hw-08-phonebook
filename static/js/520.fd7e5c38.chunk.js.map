{"version":3,"file":"static/js/520.fd7e5c38.chunk.js","mappings":"kNAYaA,EAAuB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,SCmB1B,SAASC,IACtB,IAAMF,GAAWG,EAAAA,EAAAA,IAAYL,GACvBM,GAAWC,EAAAA,EAAAA,MAMjB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,GAASG,EAAAA,EAAAA,MACV,GAAE,CAACH,KAGF,iCACE,0BACE,gDAGF,wBACCJ,EAASQ,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,2BACE,uBAAKD,KACL,uBAAKC,MAFEF,EADG,QAUnB,C","sources":["redux/contacts/selectors.js","pages/Contacts.js"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\n// export const selectContacts = state => state.contacts.items;\n\n// export const selectIsLoading = state => state.contacts.isLoading;\n\n// export const selectError = state => state.contacts.error;\n\n// export const selectTotalContacts = state => state.contacts.items.length;\n\n\n// export const selectFilteredContact = state => state.filter;\nexport const selectTotalContacts  = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\n\n\n// export const selectFilteredByName = createSelector(\n//   [selectContacts, selectFilteredContact],\n//   (contacts, nameFromFilter) => {\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(nameFromFilter.toLowerCase())\n//     );\n//   }\n// );\n\n// export const selectCurrentContact = createSelector(\n//   [selectContacts, (_, props) => props.id],\n//   (contacts, id) => {\n//     return contacts.find(contact => contact.id === id);\n//   }\n// );","// // import React, { useEffect } from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { Helmet } from 'react-helmet';\n// import { ContactList } from '../components/ContactList/ContactList';\n// // import { fetchContacts } from '../redux/contacts/service';\n// // import {ContactForm } from '../components/ContactForm/ContactForm';\n\n// export default function Contacts() {\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(fetchContacts());\n//   // }, [dispatch]);\n\n//   return (\n//     <>\n\n//        <title>Your contacts</title>\n//       {/* <ContactForm /> */}\n//       <ContactList /> \n//     </>\n//   );\n// }\n\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getAllContactsThunk } from 'redux/contacts/thunk';\nimport { selectTotalContacts } from 'redux/contacts/selectors';\n\n\nexport default function Contacts() {\n  const contacts = useSelector(selectTotalContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your contacts</title>\n      </div>\n\n      <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{ name}</p>\n          <p>{ number}</p>\n        </li>\n      ))}\n    \n    </ul>\n    </>\n  );\n}\n\n"],"names":["selectTotalContacts","state","contacts","items","Contacts","useSelector","dispatch","useDispatch","useEffect","getAllContactsThunk","map","id","name","number"],"sourceRoot":""}