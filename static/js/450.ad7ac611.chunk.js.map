{"version":3,"file":"static/js/450.ad7ac611.chunk.js","mappings":"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","sources":["components/ContactEdit/ContactEdit.js","redux/contacts/selectors.js","components/Contacts/Contacts.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/thunk';\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nconst formStyle = {\n  maxWidth: '300px',\n  margin: '0 auto',\n  padding: '20px',\n  border: '1px solid #ccc',\n  borderRadius: '5px',\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nconst inputStyle = {\n  margin: '5px 0',\n  padding: '10px',\n  border: '1px solid #ccc',\n  borderRadius: '5px',\n  fontSize: '16px',\n};\n\nconst buttonStyle = {\n  backgroundColor: '#ff5733',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  padding: '10px',\n  cursor: 'pointer',\n  fontSize: '16px',\n};\n\nconst validationSchema = Yup.object({\n  name: Yup.string()\n    .matches(/^[A-Za-z\\s]+$/, 'Name is not valid')\n    .required('Name is required'),\n  number: Yup.string()\n    .matches(/^\\d+$/, 'Number is not valid')\n    .required('Number is required'),\n});\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, { resetForm }) => {\n    const { name, number } = values;\n\n    if (name && number) {\n      try {\n        await dispatch(addNewContact({ name, number }));\n        resetForm();\n      } catch (error) {\n        alert('An error occurred while adding the contact.');\n      }\n    } else {\n      alert('Enter a valid Name and Number.');\n    }\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={validationSchema}\n      onSubmit={handleSubmit}\n    >\n      {({ isSubmitting }) => (\n        <Form style={formStyle}>\n          <div>\n            <Field\n              style={inputStyle}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"Name\"\n            />\n            <ErrorMessage name=\"name\" component=\"div\" style={{ color: 'red' }} />\n          </div>\n          <div>\n            <Field\n              style={inputStyle}\n              type=\"text\"\n              name=\"number\"\n              placeholder=\"Number\"\n            />\n            <ErrorMessage name=\"number\" component=\"div\" style={{ color: 'red' }} />\n          </div>\n          <button\n            style={buttonStyle}\n            type=\"submit\"\n            disabled={isSubmitting}\n          >\n            {isSubmitting ? 'Adding...' : 'Add Contact'}\n          </button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectTotalContacts = state => state.contacts.items;\n\n\nexport const selectFilteredContact = state => state.filter;\n\nexport const selectFilteredByName = createSelector(\n  [selectContacts, selectFilteredContact],\n  (contacts, nameFromFilter) => {\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(nameFromFilter.toLowerCase())\n    );\n  }\n);\n\nexport const selectCurrentContact = createSelector(\n  [selectContacts, (_, props) => props.id],\n  (contacts, id) => {\n    return contacts.find(contact => contact.id === id);\n  }\n);","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from '../../redux/contacts/thunk';\nimport { selectFilteredByName } from '../../redux/contacts/selectors';\n\nconst listStyle = {\n  listStyleType: 'none',\n  padding: 0,\n  maxWidth: '400px',\n  margin: '0 auto',\n};\n\nconst listItemStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  background: '#f5f5f5',\n  padding: '10px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  marginBottom: '10px',\n};\n\nconst buttonStyle = {\n  backgroundColor: '#ff5733',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  padding: '5px 10px',\n  cursor: 'pointer',\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectFilteredByName);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = (id) => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <ul style={listStyle}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} style={listItemStyle}>\n          <div>\n            <p style={{ fontWeight: 'bold' }}>{name}</p>\n            <p>{number}</p>\n          </div>\n          <button onClick={() => handleDeleteContact(id)} style={buttonStyle}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { contactsFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilteredContact } from '../../redux/contacts/selectors';\n\nconst filterStyle = {\n  marginBottom: '20px',\n  backgroundColor: 'transparent',\n  boxShadow: '0px 2px 5px -1px rgba(0, 0, 0, 0.65)',\n  borderRadius: '8px',\n  transition: 'background-color 250ms ease-in, box-shadow 250ms ease-in',\n  display: 'flex',\n  alignItems: 'center',\n  padding: '10px',\n};\n\nconst labelStyle = {\n  marginRight: '10px',\n  color: 'rgba(0, 0, 0, 0.8)',\n  fontWeight: 'bold',\n  fontSize: '14px',\n};\n\nconst inputStyle = {\n  flex: 1,\n  border: 'none',\n  borderRadius: '5px',\n  padding: '5px 10px',\n  boxShadow: '0 2px 2px rgba(0, 0, 0, 0.1)',\n  fontSize: '16px',\n};\n\nexport const Filter = () => {\n  const nameFromFilter = useSelector(selectFilteredContact);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (e) => {\n    dispatch(contactsFilter(e.currentTarget.value));\n  };\n\n  return (\n    <div style={filterStyle}>\n      <label style={labelStyle}>Filter by Name:</label>\n      <input\n        style={inputStyle}\n        placeholder=\"Search...\"\n        name=\"filter\"\n        value={nameFromFilter}\n        onChange={handleFilterChange}\n      />\n    </div>\n  );\n};\n","\nimport { useEffect } from 'react';\nimport { useDispatch} from 'react-redux';\nimport { getAllContactsThunk } from 'redux/contacts/thunk';\nimport { ContactEditor } from 'components/ContactEdit/ContactEdit';\nimport {ContactList } from 'components/Contacts/Contacts'\nimport {Filter} from 'components/Filter/Filter'\n\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your contacts</title>\n      </div>\n      <Filter/>\n      <ContactEditor />\n      <ContactList />\n    </>\n  );\n}\n\n"],"names":["formStyle","maxWidth","margin","padding","border","borderRadius","display","flexDirection","inputStyle","fontSize","buttonStyle","backgroundColor","color","cursor","validationSchema","Yup","name","matches","required","number","ContactEditor","dispatch","useDispatch","handleSubmit","values","resetForm","addNewContact","alert","initialValues","onSubmit","isSubmitting","style","type","placeholder","component","disabled","selectContacts","state","contacts","items","selectFilteredContact","filter","selectFilteredByName","createSelector","nameFromFilter","toLowerCase","includes","listStyle","_","props","id","find","contact","listStyleType","listItemStyle","justifyContent","alignItems","background","marginBottom","ContactList","useSelector","map","fontWeight","onClick","removeContact","handleDeleteContact","filterStyle","boxShadow","transition","labelStyle","marginRight","flex","Filter","value","onChange","e","contactsFilter","currentTarget","Contacts","useEffect","getAllContactsThunk"],"sourceRoot":""}