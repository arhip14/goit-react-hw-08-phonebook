{"version":3,"file":"static/js/133.8b49ac7a.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","components/ContactEdit/ContactEdit.js","components/Contacts/Contacts.js","components/Filter/Filter.styles.js","components/Filter/Filter.js","pages/Contacts.js"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\n// export const selectContacts = state => state.contacts.items;\n\n// export const selectIsLoading = state => state.contacts.isLoading;\n\n// export const selectError = state => state.contacts.error;\n\n// export const selectTotalContacts = state => state.contacts.items.length;\n\n\n// export const selectFilteredContact = state => state.filter;\nexport const selectTotalContacts  = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\n\n\n// export const selectFilteredByName = createSelector(\n//   [selectContacts, selectFilteredContact],\n//   (contacts, nameFromFilter) => {\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(nameFromFilter.toLowerCase())\n//     );\n//   }\n// );\n\n// export const selectCurrentContact = createSelector(\n//   [selectContacts, (_, props) => props.id],\n//   (contacts, id) => {\n//     return contacts.find(contact => contact.id === id);\n//   }\n// );","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/thunk';\n\nconst formStyle = {\n  maxWidth: '300px',\n  margin: '0 auto',\n  padding: '20px',\n  border: '1px solid #ccc',\n  borderRadius: '5px',\n  display: 'flex',\n  flexDirection: 'column',\n};\n\nconst inputStyle = {\n  margin: '5px 0',\n  padding: '10px',\n  border: '1px solid #ccc',\n  borderRadius: '5px',\n  fontSize: '16px',\n};\n\nconst buttonStyle = {\n  backgroundColor: '#ff5733',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  padding: '10px',\n  cursor: 'pointer',\n  fontSize: '16px',\n};\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (name.trim() !== '' && number.trim() !== '') {\n      try {\n        await dispatch(addNewContact({ name, number }));\n        setName('');\n        setNumber('');\n      } catch (error) {\n        alert('An error occurred while adding the contact.');\n      }\n    } else {\n      alert('Enter Name and Number !!!');\n    }\n  };\n\n  return (\n    <form style={formStyle} onSubmit={handleSubmit}>\n      <input\n        style={inputStyle}\n        type=\"text\"\n        name=\"name\"\n        placeholder=\"Name\"\n        value={name}\n        onChange={(e) => setName(e.target.value)}\n      />\n      <input\n        style={inputStyle}\n        type=\"text\"\n        name=\"number\"\n        placeholder=\"Number\"\n        value={number}\n        onChange={(e) => setNumber(e.target.value)}\n      />\n      <button style={buttonStyle} type=\"submit\">\n        Add Contact\n      </button>\n    </form>\n  );\n};\n","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectTotalContacts } from '../../redux/contacts/selectors';\nimport { removeContact } from '../../redux/contacts/thunk'; // Adjust the import path as needed\n\nconst listStyle = {\n  listStyleType: 'none',\n  padding: 0,\n  maxWidth: '400px',\n  margin: '0 auto',\n};\n\nconst listItemStyle = {\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  background: '#f5f5f5',\n  padding: '10px',\n  border: '1px solid #ddd',\n  borderRadius: '5px',\n  marginBottom: '10px',\n};\n\nconst buttonStyle = {\n  backgroundColor: '#ff5733',\n  color: 'white',\n  border: 'none',\n  borderRadius: '5px',\n  padding: '5px 10px',\n  cursor: 'pointer',\n};\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectTotalContacts);\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = (id) => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <ul style={listStyle}>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id} style={listItemStyle}>\n          <div>\n            <p style={{ fontWeight: 'bold' }}>{name}</p>\n            <p>{number}</p>\n          </div>\n          <button onClick={() => handleDeleteContact(id)} style={buttonStyle}>\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n","import styled from 'styled-components';\n\nexport const FilterContainer = styled.div`\n    display: flex;\n    align-items: center;\n    margin-bottom: 20px;\n\n  label {\n    font-size: 16px;\n    margin-right:10px;\n    align-items:center;\n  }\n\n\n  input {\n    padding:10px;\n    border: 1px solid #ddd;\n    border-radius: 3px;\n    font-size:16px;\n    flex-grow:1;\n  } \n`;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { FilterContainer } from './Filter.styles';\nimport { useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector((state) => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const handleFilterChange = (event) => {\n    const newValue = event.target.value;\n    dispatch(selectFilter(newValue));\n  };\n\n  return (\n    <FilterContainer>\n      <label>Filter contacts by name:</label>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={handleFilterChange}\n        placeholder=\"Enter name to filter\"\n      />\n    </FilterContainer>\n  );\n};\n","// // import React, { useEffect } from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { Helmet } from 'react-helmet';\n// import { ContactList } from '../components/ContactList/ContactList';\n// // import { fetchContacts } from '../redux/contacts/service';\n// // import {ContactForm } from '../components/ContactForm/ContactForm';\n\n// export default function Contacts() {\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(fetchContacts());\n//   // }, [dispatch]);\n\n//   return (\n//     <>\n\n//        <title>Your contacts</title>\n//       {/* <ContactForm /> */}\n//       <ContactList /> \n//     </>\n//   );\n// }\n\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getAllContactsThunk } from 'redux/contacts/thunk';\nimport { selectTotalContacts } from 'redux/contacts/selectors';\nimport { ContactEditor } from 'components/ContactEdit/ContactEdit';\nimport {ContactList } from 'components/Contacts/Contacts'\nimport {Filter} from 'components/Filter/Filter'\n\n\nexport default function Contacts() {\n  const contacts = useSelector(selectTotalContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your contacts</title>\n      </div>\n                  <Filter/>\n      <ContactEditor />\n\n      <ContactList />\n\n    \n      <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{ name}</p>\n          <p>{ number}</p>\n        </li>\n      ))}\n    \n    </ul>\n    </>\n  );\n}\n\n"],"names":["selectTotalContacts","state","contacts","items","formStyle","maxWidth","margin","padding","border","borderRadius","display","flexDirection","inputStyle","fontSize","buttonStyle","backgroundColor","color","cursor","ContactEditor","dispatch","useDispatch","useState","name","setName","number","setNumber","handleSubmit","e","preventDefault","trim","addNewContact","alert","style","onSubmit","type","placeholder","value","onChange","target","listStyle","listStyleType","listItemStyle","justifyContent","alignItems","background","marginBottom","ContactList","useSelector","map","id","fontWeight","onClick","removeContact","handleDeleteContact","FilterContainer","styled","Filter","filter","event","newValue","Contacts","useEffect","getAllContactsThunk"],"sourceRoot":""}