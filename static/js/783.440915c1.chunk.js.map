{"version":3,"file":"static/js/783.440915c1.chunk.js","mappings":"kNAYaA,EAAuB,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,E,oCCT5BC,EAAgB,WAC3B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,mCAAG,WAAOC,GAAP,8EACnBA,EAAEC,iBACIC,EAAOF,EAAEG,cACTC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAASL,EAAKG,SAASE,OAAOD,MAEhB,KAAhBF,EAAKI,QAAmC,KAAlBD,EAAOC,OANd,0CASTX,GAASY,EAAAA,EAAAA,IAAc,CAAEL,KAAAA,EAAMG,OAAAA,KATtB,OAUfL,EAAKQ,QAVU,kDAYfC,MAAM,+CAZS,gCAejBA,MAAM,6BAfW,0DAAH,sDAmBlB,OACE,kBAAMC,SAAUb,EAAhB,WACE,kBAAOK,KAAK,OAAOS,YAAY,UAC/B,kBAAOT,KAAK,SAASS,YAAY,YACjC,mBAAQC,KAAK,SAAb,2BAGL,E,SC7BYC,EAAU,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACtBpB,GAAWC,EAAAA,EAAAA,MAGjB,OACE,4BACE,uBAAImB,KACJ,mBAAQH,KAAK,SAASI,QALL,kBAAMrB,GAASsB,EAAAA,EAAAA,IAAeH,GAA9B,EAKjB,sBAKL,ECmBc,SAASI,IACtB,IAAM1B,GAAW2B,EAAAA,EAAAA,IAAY7B,GACvBK,GAAWC,EAAAA,EAAAA,MAMjB,OAJAwB,EAAAA,EAAAA,YAAU,WACRzB,GAAS0B,EAAAA,EAAAA,MACV,GAAE,CAAC1B,KAGF,iCACE,0BACE,gDAEF,SAACD,EAAD,KACF,SAACmB,EAAD,KAEE,wBACCrB,EAAS8B,KAAI,gBAAGR,EAAH,EAAGA,GAAIZ,EAAP,EAAOA,KAAMG,EAAb,EAAaA,OAAb,OACZ,2BACE,uBAAKH,KACL,uBAAKG,MAFES,EADG,QAUnB,C","sources":["redux/contacts/selectors.js","components/ContactEdit/ContactEdit.js","components/Contacts/Contacts.js","pages/Contacts.js"],"sourcesContent":["// import { createSelector } from '@reduxjs/toolkit';\n\n// export const selectContacts = state => state.contacts.items;\n\n// export const selectIsLoading = state => state.contacts.isLoading;\n\n// export const selectError = state => state.contacts.error;\n\n// export const selectTotalContacts = state => state.contacts.items.length;\n\n\n// export const selectFilteredContact = state => state.filter;\nexport const selectTotalContacts  = state => state.contacts.items;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectFilter = state => state.filter;\n\n\n\n// export const selectFilteredByName = createSelector(\n//   [selectContacts, selectFilteredContact],\n//   (contacts, nameFromFilter) => {\n//     return contacts.filter(({ name }) =>\n//       name.toLowerCase().includes(nameFromFilter.toLowerCase())\n//     );\n//   }\n// );\n\n// export const selectCurrentContact = createSelector(\n//   [selectContacts, (_, props) => props.id],\n//   (contacts, id) => {\n//     return contacts.find(contact => contact.id === id);\n//   }\n// );","import { useDispatch } from 'react-redux';\nimport { addNewContact } from 'redux/contacts/thunk'; // Adjust the path to your thunk file\n\nexport const ContactEditor = () => {\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    const name = form.elements.name.value;\n    const number = form.elements.number.value;\n\n    if (name.trim() !== '' && number.trim() !== '') {\n      try {\n        // Dispatch the addNewContact thunk here\n        await dispatch(addNewContact({ name, number }));\n        form.reset();\n      } catch (error) {\n        alert('An error occurred while adding the contact.');\n      }\n    } else {\n      alert('Enter Name and Number !!!');\n    }\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <input name=\"name\" placeholder=\"Name\" />\n      <input name=\"number\" placeholder=\"Number\" />\n      <button type=\"submit\">Add Contact</button>\n    </form>\n  );\n};\n","import { useDispatch } from 'react-redux';\nimport { deleteContacts } from '../../redux/contacts/service';\n\nexport const Contact = ({ id, text }) => {\n  const dispatch = useDispatch();\n  const handleDelete = () => dispatch(deleteContacts(id));\n\n  return (\n    <div>\n      <p>{text}</p>\n      <button type=\"button\" onClick={handleDelete}>\n        Delete\n      </button>\n    </div>\n  );\n};\n","// // import React, { useEffect } from 'react';\n// // import { useDispatch } from 'react-redux';\n// // import { Helmet } from 'react-helmet';\n// import { ContactList } from '../components/ContactList/ContactList';\n// // import { fetchContacts } from '../redux/contacts/service';\n// // import {ContactForm } from '../components/ContactForm/ContactForm';\n\n// export default function Contacts() {\n//   // const dispatch = useDispatch();\n\n//   // useEffect(() => {\n//   //   dispatch(fetchContacts());\n//   // }, [dispatch]);\n\n//   return (\n//     <>\n\n//        <title>Your contacts</title>\n//       {/* <ContactForm /> */}\n//       <ContactList /> \n//     </>\n//   );\n// }\n\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector} from 'react-redux';\nimport { getAllContactsThunk } from 'redux/contacts/thunk';\nimport { selectTotalContacts } from 'redux/contacts/selectors';\nimport { ContactEditor } from 'components/ContactEdit/ContactEdit';\nimport { Contact } from 'components/Contacts/Contacts'\n\n\n\nexport default function Contacts() {\n  const contacts = useSelector(selectTotalContacts);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(getAllContactsThunk());\n  }, [dispatch]);\n\n  return (\n    <>\n      <div>\n        <title>Your contacts</title>\n      </div>\n      <ContactEditor/>\n    <Contact/>\n    \n      <ul>\n      {contacts.map(({ id, name, number }) => (\n        <li key={id}>\n          <p>{ name}</p>\n          <p>{ number}</p>\n        </li>\n      ))}\n    \n    </ul>\n    </>\n  );\n}\n\n"],"names":["selectTotalContacts","state","contacts","items","ContactEditor","dispatch","useDispatch","handleSubmit","e","preventDefault","form","currentTarget","name","elements","value","number","trim","addNewContact","reset","alert","onSubmit","placeholder","type","Contact","id","text","onClick","deleteContacts","Contacts","useSelector","useEffect","getAllContactsThunk","map"],"sourceRoot":""}